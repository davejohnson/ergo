#!/usr/bin/env node
require("./setup/error-listener")();
const { program } = require("commander");
const ValueAlreadyExistsForPragmaError = require("../lib/errors/ValueAlreadyExistsForPragmaError");
const arcFile = require("../lib/arc-file");
const arcCli = require("../lib/arc-cli");
const getValidScheduledNameFromString = require("../lib/sanitizers/get-valid-scheduled-name-from-string");

program.arguments("[input...]");

program.usage("<job-name> <rate expression or cron>");

program.on("--help", () => {
  console.log("");
  console.log("Rate expresion examples:");
  console.log("  Every 5 minutes");
  console.log("    rate(5 minutes)");
  console.log("");
  console.log("  Every hour");
  console.log("    rate(1 hour)");
  console.log("");
  console.log("  Every seven days");
  console.log("    rate(7 days)");

  console.log("");
  console.log("Cron expression examples:");
  console.log("  10:15 AM (UTC) every day");
  console.log("    cron(15 10 * * ? *)");
  console.log("");
  console.log("  6:00 PM Monday through Friday");
  console.log("    cron(0 18 ? * MON-FRI *)");
  console.log("");
  console.log("  8:00 AM on the first day of the month");
  console.log("    cron(0 8 1 * ? *)");
  console.log("");
  console.log("  Every 10 min on weekdays");
  console.log("    cron(0/10 * ? * MON-FRI *)");
  console.log("");
  console.log("  Every 5 minutes between 8:00 AM and 5:55 PM weekdays");
  console.log("    cron(0/5 8-17 ? * MON-FRI *)");
  console.log("");
  console.log("  9:00 AM on the first Monday of each month");
  console.log("    cron(0 9 ? * 2#1 *)");

  console.log("");
  console.log("Tip:");
  console.log(
    "  Use double-quotes to prevent your shell from parsing paranthesis `()` and stars `*`"
  );

  console.log("");
  console.log("Example:");
  console.log('  $ ergo add scheduled "daily-update-buddy rate(1 day)"');
});

program.action(async (values) => {
  try {
    // `(` and `)` need to be escaped in Bash, so we'll allow the
    // user to specify everything as one argument if he wants, e.g.
    // ergo add scheduled "daily-update-buddy rate(1 day)"
    values = values.flatMap((val) => val.split(" "));

    if (values.length < 2) {
      program.help();
    }

    const originalName = values[0];
    values[0] = getValidScheduledNameFromString(originalName);
    if (originalName !== values[0]) {
      console.log(`💡 Corrected '${originalName}' to '${values[0]}'`);
    }

    await arcFile.writePragmaAndValue({
      pragma: "scheduled",
      value: values,
    });
    await arcCli.init();
    console.log(`✅ Added to schedule: ${values.join(" ")}`);
  } catch (err) {
    if (err instanceof ValueAlreadyExistsForPragmaError) {
      console.error(`⚠️  Schedule '${values.join(" ")}' already exists`);
    } else {
      throw err;
    }
  }
});

program.parse(process.argv);
